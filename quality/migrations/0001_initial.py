# Generated by Django 5.2.1 on 2025-06-03 06:47

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DefectType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('severity_multiplier', models.FloatField(default=1.0)),
                ('categories', models.ManyToManyField(related_name='defect_types', to='products.category')),
            ],
        ),
        migrations.CreateModel(
            name='QualityAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('model_version', models.CharField(default='yolov8', max_length=50)),
                ('confidence_threshold', models.FloatField(default=0.5)),
                ('overall_score', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('quality_grade', models.CharField(max_length=1)),
                ('size_score', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('color_score', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('shape_score', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('surface_score', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('freshness_score', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('defects_detected', models.JSONField(blank=True, default=list)),
                ('defect_count', models.PositiveIntegerField(default=0)),
                ('defect_severity', models.CharField(default='none', max_length=20)),
                ('bounding_boxes', models.JSONField(blank=True, default=list)),
                ('class_predictions', models.JSONField(blank=True, default=list)),
                ('confidence_scores', models.JSONField(blank=True, default=list)),
                ('estimated_weight', models.FloatField(blank=True, null=True)),
                ('ripeness_level', models.CharField(blank=True, max_length=20)),
                ('shelf_life_days', models.PositiveIntegerField(blank=True, null=True)),
                ('processing_time', models.FloatField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quality_analyses', to='products.productimage')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quality_analyses', to='products.product')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QualityReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_analyses', models.PositiveIntegerField(default=0)),
                ('average_score', models.FloatField(default=0.0)),
                ('most_common_grade', models.CharField(blank=True, max_length=1)),
                ('grade_a_count', models.PositiveIntegerField(default=0)),
                ('grade_b_count', models.PositiveIntegerField(default=0)),
                ('grade_c_count', models.PositiveIntegerField(default=0)),
                ('grade_d_count', models.PositiveIntegerField(default=0)),
                ('quality_trend', models.CharField(blank=True, max_length=20)),
                ('last_analysis_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='quality_report', to='products.product')),
            ],
        ),
        migrations.CreateModel(
            name='QualityStandard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_a_min_score', models.FloatField(default=0.8)),
                ('grade_b_min_score', models.FloatField(default=0.6)),
                ('grade_c_min_score', models.FloatField(default=0.4)),
                ('size_weight', models.FloatField(default=0.2)),
                ('color_weight', models.FloatField(default=0.2)),
                ('shape_weight', models.FloatField(default=0.2)),
                ('surface_weight', models.FloatField(default=0.2)),
                ('freshness_weight', models.FloatField(default=0.2)),
                ('max_defects_grade_a', models.PositiveIntegerField(default=0)),
                ('max_defects_grade_b', models.PositiveIntegerField(default=2)),
                ('max_defects_grade_c', models.PositiveIntegerField(default=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quality_standards', to='products.category')),
            ],
        ),
    ]

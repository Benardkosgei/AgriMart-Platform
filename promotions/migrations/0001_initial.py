# Generated by Django 5.2.1 on 2025-06-03 07:32

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0001_initial'),
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BundleDeal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('total_regular_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('bundle_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('savings_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('times_purchased', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FlashSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('max_quantity_per_user', models.PositiveIntegerField(default=5)),
                ('total_quantity_available', models.PositiveIntegerField(blank=True, null=True)),
                ('quantity_sold', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='LoyaltyProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('points_per_spend', models.DecimalField(decimal_places=2, default=1.0, max_digits=5)),
                ('points_value', models.DecimalField(decimal_places=4, default=0.01, max_digits=5)),
                ('signup_bonus', models.PositiveIntegerField(default=100)),
                ('review_bonus', models.PositiveIntegerField(default=50)),
                ('referral_bonus', models.PositiveIntegerField(default=200)),
                ('tier_thresholds', models.JSONField(default=dict)),
                ('tier_multipliers', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PromotionAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('active_promotions', models.PositiveIntegerField(default=0)),
                ('total_promotions', models.PositiveIntegerField(default=0)),
                ('promotion_uses', models.PositiveIntegerField(default=0)),
                ('discount_amount_given', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('orders_with_promotions', models.PositiveIntegerField(default=0)),
                ('coupons_redeemed', models.PositiveIntegerField(default=0)),
                ('points_earned', models.PositiveIntegerField(default=0)),
                ('points_redeemed', models.PositiveIntegerField(default=0)),
                ('new_loyalty_members', models.PositiveIntegerField(default=0)),
                ('flash_sale_orders', models.PositiveIntegerField(default=0)),
                ('flash_sale_revenue', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='BundleProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('bundle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='promotions.bundledeal')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
            options={
                'unique_together': {('bundle', 'product')},
            },
        ),
        migrations.AddField(
            model_name='bundledeal',
            name='products',
            field=models.ManyToManyField(through='promotions.BundleProduct', to='products.product'),
        ),
        migrations.CreateModel(
            name='FlashSaleProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sale_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('quantity_available', models.PositiveIntegerField()),
                ('quantity_sold', models.PositiveIntegerField(default=0)),
                ('flash_sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='promotions.flashsale')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
            options={
                'unique_together': {('flash_sale', 'product')},
            },
        ),
        migrations.AddField(
            model_name='flashsale',
            name='products',
            field=models.ManyToManyField(through='promotions.FlashSaleProduct', to='products.product'),
        ),
        migrations.CreateModel(
            name='LoyaltyAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_points_earned', models.PositiveIntegerField(default=0)),
                ('points_redeemed', models.PositiveIntegerField(default=0)),
                ('current_balance', models.PositiveIntegerField(default=0)),
                ('current_tier', models.CharField(default='Bronze', max_length=50)),
                ('tier_progress', models.PositiveIntegerField(default=0)),
                ('total_orders', models.PositiveIntegerField(default=0)),
                ('total_spent', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='loyalty_account', to=settings.AUTH_USER_MODEL)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to='promotions.loyaltyprogram')),
            ],
            options={
                'unique_together': {('user', 'program')},
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('promotion_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('promotion_type', models.CharField(choices=[('discount', 'Discount'), ('bogo', 'Buy One Get One'), ('bundle', 'Bundle Deal'), ('cashback', 'Cashback'), ('free_shipping', 'Free Shipping'), ('loyalty_points', 'Loyalty Points')], max_length=20)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('max_discount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('paused', 'Paused'), ('expired', 'Expired'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('max_uses', models.PositiveIntegerField(blank=True, null=True)),
                ('max_uses_per_user', models.PositiveIntegerField(default=1)),
                ('current_uses', models.PositiveIntegerField(default=0)),
                ('minimum_order_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('minimum_quantity', models.PositiveIntegerField(default=1)),
                ('target_user_types', models.JSONField(blank=True, default=list)),
                ('priority', models.PositiveIntegerField(default=1)),
                ('stackable', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_promotions', to=settings.AUTH_USER_MODEL)),
                ('target_categories', models.ManyToManyField(blank=True, to='products.category')),
                ('target_products', models.ManyToManyField(blank=True, to='products.product')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coupon_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('uses_count', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('promotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coupons', to='promotions.promotion')),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='PromotionUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('coupon_code', models.CharField(blank=True, max_length=50)),
                ('used_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='orders.order')),
                ('promotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usages', to='promotions.promotion')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promotion_usages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SeasonalPromotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('season_type', models.CharField(choices=[('christmas', 'Christmas'), ('new_year', 'New Year'), ('easter', 'Easter'), ('harvest', 'Harvest Season'), ('rainy', 'Rainy Season'), ('dry', 'Dry Season'), ('valentine', "Valentine's Day"), ('mothers_day', "Mother's Day"), ('fathers_day', "Father's Day"), ('independence', 'Independence Day'), ('custom', 'Custom Event')], max_length=20)),
                ('description', models.TextField()),
                ('banner_image', models.URLField(blank=True)),
                ('theme_color', models.CharField(default='#000000', max_length=7)),
                ('gift_wrapping_available', models.BooleanField(default=False)),
                ('special_delivery_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('base_promotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='promotions.promotion')),
            ],
        ),
        migrations.CreateModel(
            name='PointTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('transaction_type', models.CharField(choices=[('earned', 'Points Earned'), ('redeemed', 'Points Redeemed'), ('expired', 'Points Expired'), ('bonus', 'Bonus Points'), ('adjustment', 'Manual Adjustment')], max_length=20)),
                ('points', models.IntegerField()),
                ('description', models.CharField(max_length=200)),
                ('balance_before', models.PositiveIntegerField()),
                ('balance_after', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='promotions.loyaltyaccount')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.order')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['account', 'transaction_type'], name='promotions__account_6c2c36_idx'), models.Index(fields=['created_at'], name='promotions__created_f7fd02_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='promotion',
            index=models.Index(fields=['status', 'start_date', 'end_date'], name='promotions__status_01e07b_idx'),
        ),
        migrations.AddIndex(
            model_name='promotion',
            index=models.Index(fields=['promotion_type', 'status'], name='promotions__promoti_f5a968_idx'),
        ),
        migrations.AddIndex(
            model_name='promotionusage',
            index=models.Index(fields=['promotion', 'user'], name='promotions__promoti_ac6da2_idx'),
        ),
        migrations.AddIndex(
            model_name='promotionusage',
            index=models.Index(fields=['user', 'used_at'], name='promotions__user_id_4cb9b9_idx'),
        ),
    ]

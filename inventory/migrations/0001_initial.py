# Generated by Django 5.2.1 on 2025-06-03 07:21

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InventoryAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_products', models.PositiveIntegerField(default=0)),
                ('total_stock_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('low_stock_items', models.PositiveIntegerField(default=0)),
                ('out_of_stock_items', models.PositiveIntegerField(default=0)),
                ('overstock_items', models.PositiveIntegerField(default=0)),
                ('total_movements', models.PositiveIntegerField(default=0)),
                ('purchases_quantity', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('sales_quantity', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('waste_quantity', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('pending_pos', models.PositiveIntegerField(default=0)),
                ('pending_po_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('active_alerts', models.PositiveIntegerField(default=0)),
                ('critical_alerts', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplier_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('contact_person', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('country', models.CharField(default='Kenya', max_length=100)),
                ('business_license', models.CharField(blank=True, max_length=100)),
                ('tax_number', models.CharField(blank=True, max_length=50)),
                ('bank_account', models.CharField(blank=True, max_length=50)),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('total_orders', models.PositiveIntegerField(default=0)),
                ('on_time_delivery_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('quality_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('blacklisted', 'Blacklisted'), ('pending_approval', 'Pending Approval')], default='pending_approval', max_length=20)),
                ('payment_terms', models.CharField(default='Net 30', max_length=100)),
                ('minimum_order_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('categories', models.ManyToManyField(related_name='suppliers', to='products.category')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('total_capacity', models.DecimalField(decimal_places=2, help_text='In cubic meters', max_digits=10)),
                ('temperature_controlled', models.BooleanField(default=False)),
                ('humidity_controlled', models.BooleanField(default=False)),
                ('phone', models.CharField(max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('po_number', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Approval'), ('approved', 'Approved'), ('sent', 'Sent to Supplier'), ('confirmed', 'Confirmed by Supplier'), ('partially_received', 'Partially Received'), ('received', 'Fully Received'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=20)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('shipping_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('expected_delivery_date', models.DateField(blank=True, null=True)),
                ('actual_delivery_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('terms_and_conditions', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_pos', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('received_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received_pos', to=settings.AUTH_USER_MODEL)),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_orders', to='inventory.supplier')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_orders', to='inventory.warehouse')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_stock', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('reserved_stock', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('available_stock', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('reorder_point', models.DecimalField(decimal_places=2, default=10.0, max_digits=10)),
                ('reorder_quantity', models.DecimalField(decimal_places=2, default=50.0, max_digits=10)),
                ('maximum_stock', models.DecimalField(decimal_places=2, default=100.0, max_digits=10)),
                ('unit_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('last_reorder_date', models.DateTimeField(blank=True, null=True)),
                ('auto_reorder_enabled', models.BooleanField(default=True)),
                ('track_expiry', models.BooleanField(default=True)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='products.product')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_items', to='inventory.warehouse')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_ordered', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity_received', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('quality_grade_expected', models.CharField(blank=True, max_length=1)),
                ('quality_grade_received', models.CharField(blank=True, max_length=1)),
                ('expected_delivery_date', models.DateField(blank=True, null=True)),
                ('actual_delivery_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('purchase_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.purchaseorder')),
            ],
            options={
                'unique_together': {('purchase_order', 'product')},
            },
        ),
        migrations.CreateModel(
            name='StockAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('alert_type', models.CharField(choices=[('low_stock', 'Low Stock'), ('out_of_stock', 'Out of Stock'), ('overstock', 'Overstock'), ('expiring_soon', 'Expiring Soon'), ('expired', 'Expired'), ('reorder_needed', 'Reorder Needed')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('acknowledged', 'Acknowledged'), ('resolved', 'Resolved'), ('dismissed', 'Dismissed')], default='active', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('current_stock', models.DecimalField(decimal_places=2, max_digits=10)),
                ('threshold_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('inventory_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='inventory.inventoryitem')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', 'alert_type'], name='inventory_s_status_3504da_idx'), models.Index(fields=['inventory_item', 'status'], name='inventory_s_invento_3c0bda_idx')],
            },
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('movement_type', models.CharField(choices=[('purchase', 'Purchase'), ('sale', 'Sale'), ('return', 'Return'), ('adjustment', 'Adjustment'), ('transfer', 'Transfer'), ('waste', 'Waste/Spoilage'), ('reservation', 'Reservation'), ('release', 'Release Reservation')], max_length=20)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('stock_before', models.DecimalField(decimal_places=2, max_digits=10)),
                ('stock_after', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reference_type', models.CharField(blank=True, max_length=50)),
                ('reference_id', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('batch_number', models.CharField(blank=True, max_length=50)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('inventory_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movements', to='inventory.inventoryitem')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['inventory_item', 'movement_type'], name='inventory_s_invento_d3a8ad_idx'), models.Index(fields=['created_at'], name='inventory_s_created_05ebf5_idx')],
            },
        ),
        migrations.CreateModel(
            name='StockBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_number', models.CharField(max_length=50)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('production_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('received_date', models.DateField(auto_now_add=True)),
                ('quality_grade', models.CharField(blank=True, max_length=1)),
                ('quality_score', models.FloatField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('inventory_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='inventory.inventoryitem')),
                ('purchase_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.purchaseorder')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.supplier')),
            ],
            options={
                'ordering': ['expiry_date'],
                'indexes': [models.Index(fields=['expiry_date', 'is_active'], name='inventory_s_expiry__fb717e_idx'), models.Index(fields=['inventory_item', 'is_active'], name='inventory_s_invento_568f9c_idx')],
                'unique_together': {('batch_number', 'inventory_item')},
            },
        ),
        migrations.AddIndex(
            model_name='inventoryitem',
            index=models.Index(fields=['current_stock', 'reorder_point'], name='inventory_i_current_e61396_idx'),
        ),
        migrations.AddIndex(
            model_name='inventoryitem',
            index=models.Index(fields=['warehouse', 'current_stock'], name='inventory_i_warehou_3d1795_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='inventoryitem',
            unique_together={('product', 'warehouse')},
        ),
    ]
